# Production Environment Configuration

# Database Configuration - Production
spring.datasource.url=${MYSQL_PROD_URL}
spring.datasource.username=${MYSQL_PROD_USERNAME}
spring.datasource.password=${MYSQL_PROD_PASSWORD}

# JPA Configuration - Production (optimized for performance)
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Connection Pool Configuration - Production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=30000

# Logging Configuration - Production
logging.level.root=${LOGGING_LEVEL_ROOT}
logging.level.authserver=${LOGGING_LEVEL_AUTHSERVER}
logging.level.org.springframework.security=${LOGGING_LEVEL_SPRING_SECURITY}
logging.level.org.hibernate=${LOGGING_LEVEL_HIBERNATE}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Security Configuration - Production (strict)
app.security.rate-limit-requests=${SECURITY_RATE_LIMIT_REQUESTS:5}
app.security.rate-limit-window-seconds=${SECURITY_RATE_LIMIT_WINDOW_SECONDS:3600}
app.security.enable-cors=${SECURITY_ENABLE_CORS:false}
app.security.allowed-origins=${SECURITY_ALLOWED_ORIGINS:}
app.security.enable-security-headers=true
app.security.hsts-max-age=31536000

# OAuth Configuration - Production
app.oauth.default-access-token-ttl=${OAUTH_DEFAULT_ACCESS_TOKEN_TTL:3600}
app.oauth.default-key-size=${OAUTH_DEFAULT_KEY_SIZE:2048}

# Admin Configuration - Production (must be provided via environment)
app.admin.api-key=${ADMIN_API_KEY}

# Server Configuration - Production
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/}

# Actuator Configuration - Production (restricted)
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=health,metrics
management.endpoint.health.show-details=when-authorized

# SSL Configuration - Production (if using HTTPS)
# server.ssl.enabled=${SSL_ENABLED:false}
# server.ssl.key-store=${SSL_KEYSTORE_PATH}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
# server.ssl.key-store-type=PKCS12